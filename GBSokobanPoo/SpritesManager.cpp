// author: chris-scientist
// created at: 17/08/2018
// updated at: 25/08/2018

#include "SpritesManager.h"

/* 
 * Les constantes suivantes (WIDTH_SPRITES et HEIGHT_SPRITES) sont utilisées pour définir la taille du sprites,
 * ainsi en cas de changement de dimensions seules ces valeurs sont à modifier.
 */
const uint16_t SpritesManager::WIDTH_SPRITES = 8;
const uint16_t SpritesManager::HEIGHT_SPRITES = 8;

bool SpritesManager::areaInitialized = false;
Image SpritesManager::area;
bool SpritesManager::boxInitialized = false;
Image SpritesManager::box;
bool SpritesManager::boxOnAreaInitialized = false;
Image SpritesManager::boxOnArea;
bool SpritesManager::characterInitialized = false;
Image SpritesManager::character;
bool SpritesManager::characterOnAreaInitialized = false;
Image SpritesManager::characterOnArea;
bool SpritesManager::floorInitialized = false;
Image SpritesManager::floorImg;
bool SpritesManager::wallInitialized = false;
Image SpritesManager::wall;

// Récupérer l'image d'une zone de 'chargement'
Image& SpritesManager::getArea() {
  if(! SpritesManager::areaInitialized) {
    static const uint16_t areaData[] = {
      8, 8, 1, 0, 0, 0, 
      0xd8e4,0xd8e4,0xd8e4,0xd8e4,0xd8e4,0xd8e4,0xd8e4,0xd8e4,
      0xd8e4,0xfd42,0xfd42,0xcc68,0xcc68,0xfd42,0xfd42,0xd8e4,
      0xd8e4,0xcc68,0xfd42,0xfd42,0xcc68,0xcc68,0xfd42,0xd8e4,
      0xd8e4,0xfd42,0xfd42,0xfd42,0xfd42,0xfd42,0xfd42,0xd8e4,
      0xd8e4,0xfd42,0xfd42,0xfd42,0xfd42,0xfd42,0xfd42,0xd8e4,
      0xd8e4,0xcc68,0xfd42,0xfd42,0xcc68,0xcc68,0xfd42,0xd8e4,
      0xd8e4,0xcc68,0xcc68,0xfd42,0xfd42,0xcc68,0xcc68,0xd8e4,
      0xd8e4,0xd8e4,0xd8e4,0xd8e4,0xd8e4,0xd8e4,0xd8e4,0xd8e4
    };
    SpritesManager::area = Image(areaData);
    SpritesManager::areaInitialized = true;
  }
  return SpritesManager::area;
}

// Récupérer l'image d'une boîte
Image& SpritesManager::getBox() {
  if(! SpritesManager::boxInitialized) {
    static const uint16_t boxData[] = {
      8, 8, 1, 0, 0, 0, 
      0xacd0,0xacd0,0xacd0,0xacd0,0xacd0,0xacd0,0xacd0,0xacd0,
      0xacd0,0x0,0x0,0x0,0x0,0x0,0x0,0xacd0,
      0xacd0,0x0,0x0,0xfeb2,0xfeb2,0xfeb2,0x0,0xacd0,
      0xacd0,0x0,0xfeb2,0x0,0xfeb2,0xfeb2,0x0,0xacd0,
      0xacd0,0x0,0xfeb2,0xfeb2,0x0,0xfeb2,0x0,0xacd0,
      0xacd0,0x0,0xfeb2,0xfeb2,0xfeb2,0x0,0x0,0xacd0,
      0xacd0,0x0,0x0,0x0,0x0,0x0,0x0,0xacd0,
      0xacd0,0xacd0,0xacd0,0xacd0,0xacd0,0xacd0,0xacd0,0xacd0
    };
    SpritesManager::box = Image(boxData);
    SpritesManager::boxInitialized = true;
  }
  return SpritesManager::box;
}

// Récupérer l'image d'une boîte sur une zone de 'chargement'
Image& SpritesManager::getBoxOnArea() {
  if(! SpritesManager::boxOnAreaInitialized) {
    static const uint16_t boxOnAreaData[] = {
      8, 8, 1, 0, 0, 0, 
      0x44a,0x44a,0x44a,0x44a,0x44a,0x44a,0x44a,0x44a,
      0x44a,0x0,0x0,0x0,0x0,0x0,0x0,0x44a,
      0x44a,0x0,0x0,0xfeb2,0xfeb2,0xfeb2,0x0,0x44a,
      0x44a,0x0,0xfeb2,0x0,0xfeb2,0xfeb2,0x0,0x44a,
      0x44a,0x0,0xfeb2,0xfeb2,0x0,0xfeb2,0x0,0x44a,
      0x44a,0x0,0xfeb2,0xfeb2,0xfeb2,0x0,0x0,0x44a,
      0x44a,0x0,0x0,0x0,0x0,0x0,0x0,0x44a,
      0x44a,0x44a,0x44a,0x44a,0x44a,0x44a,0x44a,0x44a
    };
    SpritesManager::boxOnArea = Image(boxOnAreaData);
    SpritesManager::boxOnAreaInitialized = true;
  }
  return SpritesManager::boxOnArea;
}

// Récupérer l'image du personnage
Image& SpritesManager::getCharacter() {
  if(! SpritesManager::characterInitialized) {
    static const uint16_t characterData[] = {
      8, 8, 1, 0, 0, 0, 
      0xfd42,0xfd42,0xfd42,0xfd42,0xfd42,0xfd42,0xfd42,0xfd42,
      0xcc68,0xacd0,0xacd0,0xacd0,0xacd0,0xacd0,0xacd0,0xcc68,
      0xcc68,0xacd0,0x7ddf,0xfeb2,0xfeb2,0x7ddf,0xacd0,0xfd42,
      0xfd42,0xfd42,0xfd42,0xfeb2,0xfeb2,0xfd42,0xfd42,0xfd42,
      0xfd42,0x210,0x210,0x210,0x210,0x210,0x210,0xfd42,
      0xcc68,0xcc68,0x210,0x210,0x210,0x210,0xfd42,0xfd42,
      0xfd42,0xcc68,0xcc68,0x210,0x210,0xcc68,0xcc68,0xfd42,
      0xfd42,0xfd42,0xfd42,0xfd42,0xfd42,0xfd42,0xfd42,0xfd42
    };
    SpritesManager::character = Image(characterData);
    SpritesManager::characterInitialized = true;
  }
  return SpritesManager::character;
}

// Récupérer l'image du personnage sur une zone de 'chargement'
Image& SpritesManager::getCharacterOnArea() {
  if(! SpritesManager::characterOnAreaInitialized) {
    static const uint16_t characterOnAreaData[] = {
      8, 8, 1, 0, 0, 0, 
      0xd8e4,0xd8e4,0xd8e4,0xd8e4,0xd8e4,0xd8e4,0xd8e4,0xd8e4,
      0xd8e4,0xacd0,0xacd0,0xacd0,0xacd0,0xacd0,0xacd0,0xd8e4,
      0xd8e4,0xacd0,0x7ddf,0xfeb2,0xfeb2,0x7ddf,0xacd0,0xd8e4,
      0xd8e4,0xfd42,0xfd42,0xfeb2,0xfeb2,0xfd42,0xfd42,0xd8e4,
      0xd8e4,0x210,0x210,0x210,0x210,0x210,0x210,0xd8e4,
      0xd8e4,0xcc68,0x210,0x210,0x210,0x210,0xfd42,0xd8e4,
      0xd8e4,0xcc68,0xcc68,0x210,0x210,0xcc68,0xcc68,0xd8e4,
      0xd8e4,0xd8e4,0xd8e4,0xd8e4,0xd8e4,0xd8e4,0xd8e4,0xd8e4
    };
    SpritesManager::characterOnArea = Image(characterOnAreaData);
    SpritesManager::characterOnAreaInitialized = true;
  }
  return SpritesManager::characterOnArea;
}

// Récupérer l'image du sol
Image& SpritesManager::getFloorImg() {
  if(! SpritesManager::floorInitialized) {
    static const uint16_t floorData[] = {
      8, 8, 1, 0, 0, 0, 
      0xfd42,0xfd42,0xfd42,0xfd42,0xfd42,0xfd42,0xfd42,0xfd42,
      0xcc68,0xfd42,0xfd42,0xcc68,0xcc68,0xfd42,0xfd42,0xcc68,
      0xcc68,0xcc68,0xfd42,0xfd42,0xcc68,0xcc68,0xfd42,0xfd42,
      0xfd42,0xfd42,0xfd42,0xfd42,0xfd42,0xfd42,0xfd42,0xfd42,
      0xfd42,0xfd42,0xfd42,0xfd42,0xfd42,0xfd42,0xfd42,0xfd42,
      0xcc68,0xcc68,0xfd42,0xfd42,0xcc68,0xcc68,0xfd42,0xfd42,
      0xfd42,0xcc68,0xcc68,0xfd42,0xfd42,0xcc68,0xcc68,0xfd42,
      0xfd42,0xfd42,0xfd42,0xfd42,0xfd42,0xfd42,0xfd42,0xfd42
    };
    SpritesManager::floorImg = Image(floorData);
    SpritesManager::floorInitialized = true;
  }
  return SpritesManager::floorImg;
}

// Récupérer l'image du mur
Image& SpritesManager::getWall() {
  if(! SpritesManager::wallInitialized) {
    static const uint16_t wallData[] = {
      8, 8, 1, 0, 0, 0, 
      0x5268,0x5268,0x5268,0x5268,0x5268,0x5268,0x5268,0x5268,
      0xacd0,0xacd0,0xacd0,0x5268,0x5268,0xacd0,0xacd0,0xacd0,
      0xacd0,0xacd0,0xacd0,0x5268,0x5268,0xacd0,0xacd0,0xacd0,
      0x5268,0x5268,0x5268,0x5268,0x5268,0x5268,0x5268,0x5268,
      0x5268,0x5268,0x5268,0x5268,0x5268,0x5268,0x5268,0x5268,
      0x5268,0xacd0,0xacd0,0xacd0,0xacd0,0xacd0,0xacd0,0x5268,
      0x5268,0xacd0,0xacd0,0xacd0,0xacd0,0xacd0,0xacd0,0x5268,
      0x5268,0x5268,0x5268,0x5268,0x5268,0x5268,0x5268,0x5268
    };
    SpritesManager::wall = Image(wallData);
    SpritesManager::wallInitialized = true;
  }
  return SpritesManager::wall;
}

